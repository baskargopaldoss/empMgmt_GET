{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/emp-service.service.ts","./src/app/employees/employees.component.ts","./src/app/employees/employees.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAkD;;AAO3C,MAAM,cAAc;IAEzB;IAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EALU,cAAc;8FAAd,cAAc;QCP3B,oEAAG;QAAA,uEAAY;QAAA,4DAAI;;6FDON,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACE;AACY;;;AAGrE,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,OAAO,EAAC,SAAS,EAAE,qEAAc,EAAC;IACzC,EAAC,IAAI,EAAE,WAAW,EAAC,SAAS,EAAE,iFAAkB,EAAC;CAClD,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,cAAc,CAAC;KACxB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,sEAEA;QAAA,iFACI;QAAA,kFACE;QAGA,qEAAI;QAAA,0EAAe;QAAA,4DAAK;QACxB,qEAAiC;QACjC,sEACE;QAAA,uEAAuC;QAAA,kEAAM;QAAA,4DAAI;QACjD,uEAA2C;QAAA,uEAAU;QAAA,4DAAI;QAE3D,4DAAM;QACR,4DAAkB;QAKpB,4DAAc;QAGf,4EAA+B;QAChC,4DAAM;;QAbgB,0DAAuB;QAAvB,gFAAuB;QACvB,0DAA2B;QAA3B,oFAA2B;;6FDJpC,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACM;AAIR;AAET;AACH;AACO;AACK;AAEuB;AACnB;AAC5D,4DAA4D;AAC5D,8DAA8D;AAEF;AAC5D,wDAAwD;AACxD,8DAA8D;AAC9D,0DAA0D;AACF;AAEC;AACY;;AA8B9D,MAAM,SAAS;;wFAAT,SAAS,cAHR,2DAAY;4IAGb,SAAS,mBAJT,EAAE,YAjBJ;YACP,uEAAa;YACb,4FAAuB;YACvB,qEAAgB;YAChB,oEAAgB;YAChB,0DAAW;YACX,kEAAmB;YACnB,qEAAgB;YAChB,sEAAc;YACd,wEAAe;YACf,0EAAgB;SAMjB;mIAKU,SAAS,mBAzBlB,2DAAY;QACZ,sEAAc;QACd,kFAAkB,aAGlB,uEAAa;QACb,4FAAuB;QACvB,qEAAgB;QAChB,oEAAgB;QAChB,0DAAW;QACX,kEAAmB;QACnB,qEAAgB;QAChB,sEAAc;QACd,wEAAe;QACf,0EAAgB;6FAWP,SAAS;cA3BrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,sEAAc;oBACd,kFAAkB;iBACnB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,4FAAuB;oBACvB,qEAAgB;oBAChB,oEAAgB;oBAChB,0DAAW;oBACX,kEAAmB;oBACnB,qEAAgB;oBAChB,sEAAc;oBACd,wEAAe;oBACf,0EAAgB;iBAMjB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;gBACzB,OAAO,EAAC,CAAC,oEAAsB,CAAC;aACjC;;;;;;;;;;;;;;ACrDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACoB;AAEhB;AACH;;;AAOrC,MAAM,iBAAiB;IAS5B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QARlC,WAAM,GAAG,uBAAuB,CAAC;QAEzC,gBAAW,GAAG;YACZ,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH;IAE6C,CAAC;IAE/C,MAAM;QACJ,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAa,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC;aAClE,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAC9B;IACH,CAAC;IAED;;;;;;;;;;;;;;;;;;;;OAoBG;IACH,MAAM,CAAC,EAAE;QACP,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAW,IAAI,CAAC,MAAM,GAAG,YAAY,GAAG,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC;aACzF,IAAI,CACH,iEAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAC9B;IACH,CAAC;IAGD,YAAY,CAAC,KAAK;QAChB,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,IAAG,KAAK,CAAC,KAAK,YAAY,UAAU,EAAE;YACpC,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;SACpC;aAAM;YACL,YAAY,GAAG,eAAe,KAAK,CAAC,MAAM,cAAc,KAAK,CAAC,OAAO,EAAE,CAAC;SACzE;QACD,OAAO,uDAAU,CAAC,YAAY,CAAC,CAAC;IACnC,CAAC;;kFAvDW,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;6FAEP,iBAAiB;cAH7B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4D;AACD;AACE;;;;;;;;ICwE3D,uEAA+C;IAAA,2FAAgC;IAAA,4DAAI;;;IAM3E,yEAAwC;IAAA,+DAAG;IAAA,4DAAK;;;IAChD,yEAAwC;IAAA,uDAAe;IAAA,4DAAK;;;IAApB,0DAAe;IAAf,0FAAe;;;IAIvD,yEAAuC;IAAA,uEAAW;IAAA,4DAAK;;;IACvD,yEAAwC;IAAA,uDAAuB;IAAA,4DAAK;;;IAA5B,0DAAuB;IAAvB,kGAAuB;;;IAI/D,yEAAuC;IAAA,sEAAU;IAAA,4DAAK;;;IACtD,yEAAwC;IAAA,uDAAsB;IAAA,4DAAK;;;IAA3B,0DAAsB;IAAtB,iGAAsB;;;IAI9D,yEAAuC;IAAA,kEAAM;IAAA,4DAAK;;;IAClD,yEAAwC;IAAA,uDAAkB;IAAA,4DAAK;;;IAAvB,0DAAkB;IAAlB,6FAAkB;;;IAI1D,yEAAuC;IAAA,mEAAO;IAAA,4DAAK;;;;;IACnD,yEACE;IAAA,6EACiD;IAAA,+DAAI;IAAA,4DAAS;IAC9D,6EAA8E;IAArC,mZAAoC;IAAC,iEAAM;IAAA,4DAAS;IAC/F,4DAAK;;;IAFD,0DAA8C;IAA9C,6JAA8C;;;IAKpD,oEAA4D;;;IAC5D,oEAAkE;;;;IAjCxE,yEACE;IAAA,yEACE;IAAA,2EACE;IAAA,2EACE;IAAA,mHAAwC;IACxC,mHAAwC;IAC1C,qEAAe;IAEf,4EACE;IAAA,mHAAuC;IACvC,mHAAwC;IAC1C,qEAAe;IAEf,4EACE;IAAA,qHAAuC;IACvC,qHAAwC;IAC1C,qEAAe;IAEf,6EACE;IAAA,qHAAuC;IACvC,qHAAwC;IAC1C,qEAAe;IAEf,6EACE;IAAA,qHAAuC;IACvC,qHACE;IAIJ,qEAAe;IAEf,qHAAuD;IACvD,qHAA6D;IAC/D,4DAAQ;IAER,gFAAoF;IACtF,4DAAM;IACR,4DAAM;;;IApCe,0DAAyB;IAAzB,yFAAyB;IA8BrB,2DAAmC;IAAnC,oGAAmC;IAC1C,0DAAgD;IAAhD,qGAAgD;IAG/C,0DAA+B;IAA/B,kJAA+B;;ADrG7C,MAAM,kBAAkB;IAU7B,YAAmB,UAA6B;QAA7B,eAAU,GAAV,UAAU,CAAmB;QALhD,YAAO,GAAe,EAAE,CAAC;QAEzB,qBAAgB,GAAa,CAAC,IAAI,EAAE,YAAY,EAAE,WAAW,EAAC,OAAO,CAAC;IAGlB,CAAC;IAErD,QAAQ;QACN,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,CAAC,IAAgB,EAAC,EAAE;YACrD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAW,IAAI,CAAC,OAAO,CAAC,CAAC;YACjE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5B,CAAC,CAAC;IACJ,CAAC;IAED,cAAc,CAAC,KAAa,EAAE,CAAC;QAC7B,IAAG,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE;YACjC,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;YAClC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC;YAC7E,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE;SACzC;IAGH,CAAC;;oFA7BU,kBAAkB;kGAAlB,kBAAkB;kEAElB,wEAAY;;;;;QCwDzB,yEACI;QAAA,wEAAmB;QAAA,yEAAc;QAAA,4DAAK;QACtC,4EAAwC;QAC1C,4DAAM;QAEN,0GAA+C;QAE/C,+GACE;;QAHC,0DAA2B;QAA3B,yFAA2B;QAEP,0DAA0B;QAA1B,wFAA0B;;6FDjEtC,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;kBAGE,uDAAS;mBAAC,wEAAY;;;;;;;;;;;;;;AEbzB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin works!</p>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './admin/admin.component';\nimport { EmployeesComponent } from './employees/employees.component';\n\n\nconst routes: Routes = [\n  {path: 'admin',component: AdminComponent},\n  {path: 'employees',component: EmployeesComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'emp-mgmt-app';\n}\n","<div>\r\n\r\n<mat-toolbar color=\"primary\">\r\n    <mat-toolbar-row>\r\n      <!-- <button mat-icon-button>\r\n        <mat-icon (click)=\"sidenav.toggle()\">menu</mat-icon>\r\n      </button> -->\r\n      <h1>Employee Portal</h1>\r\n      <span class=\"menu-spacer\"></span>\r\n      <div>\r\n        <a mat-button [routerLink]=\"'/admin'\"> Admin </a>\r\n        <a mat-button [routerLink]=\"'/employees'\"> Employees </a>\r\n\r\n      </div>\r\n    </mat-toolbar-row>\r\n  \r\n    <!-- <mat-toolbar-row>\r\n        <span style=\"font-size: 12px;\">SimpleCRM helps you easily manage your contacts</span>\r\n      </mat-toolbar-row> -->\r\n  </mat-toolbar>\r\n   \r\n\r\n <router-outlet></router-outlet>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule,CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\n\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms'\nimport {ReactiveFormsModule} from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n import { MatButtonModule } from '@angular/material/button';\n// import { MatInputModule } from '@angular/material/input';\n// import { MatDialogModule } from '@angular/material/dialog';\n\n import {MatToolbarModule} from '@angular/material/toolbar';\n// import {MatIconModule} from '@angular/material/icon';\n// import {MatSidenavModule} from '@angular/material/sidenav';\n// import {MatListModule } from  '@angular/material/list';\nimport { MatTableModule } from '@angular/material/table'  \n\nimport { AdminComponent } from './admin/admin.component';\nimport { EmployeesComponent } from './employees/employees.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AdminComponent,\n    EmployeesComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,    \n    ReactiveFormsModule,\n    HttpClientModule,\n    MatTableModule,\n    MatButtonModule,\n    MatToolbarModule,\n    // MatDialogModule,\n    // MatInputModule, \n    // MatIconModule,\n    // MatSidenavModule,\n    // MatListModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  schemas:[CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n   \nimport {  Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n  \nimport { Employee } from './employee';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmpServiceService {\n  private apiURL = \"http://localhost:3000\";\n   \n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  }\n  \n  constructor(private httpClient: HttpClient) { }\n   \n  getAll(): Observable<Employee[]> {\n    return this.httpClient.get<Employee[]>(this.apiURL + '/employees/')\n    .pipe(\n      catchError(this.errorHandler)\n    )\n  }\n   \n  /* create(post): Observable<Post> {\n    return this.httpClient.post<Post>(this.apiURL + '/posts/', JSON.stringify(post), this.httpOptions)\n    .pipe(\n      catchError(this.errorHandler)\n    )\n  }  \n   \n  find(id): Observable<Post> {\n    return this.httpClient.get<Post>(this.apiURL + '/posts/' + id)\n    .pipe(\n      catchError(this.errorHandler)\n    )\n  }\n   \n  update(id, post): Observable<Post> {\n    return this.httpClient.put<Post>(this.apiURL + '/posts/' + id, JSON.stringify(post), this.httpOptions)\n    .pipe(\n      catchError(this.errorHandler)\n    )\n  }\n   */\n  delete(id){\n    return this.httpClient.delete<Employee>(this.apiURL + '/employee/' + id, this.httpOptions)\n    .pipe(\n      catchError(this.errorHandler)\n    )\n  }\n     \n  \n  errorHandler(error) {\n    let errorMessage = '';\n    if(error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(errorMessage);\n }\n}","import { Component, OnInit ,ViewChild} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { EmpServiceService } from '../emp-service.service';\nimport { Employee } from '../employee';\n\n@Component({\n  selector: 'app-employees',\n  templateUrl: './employees.component.html',\n  styleUrls: ['./employees.component.css']\n})\nexport class EmployeesComponent implements OnInit {\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n\n  empList: Employee[] = [];\n  dataSource: MatTableDataSource<Employee>;\n  displayedColumns: string[] = ['id', 'first_name', 'last_name','email']\n\n\n  constructor(public empService: EmpServiceService) { }\n  \n  ngOnInit(): void {\n    this.empService.getAll().subscribe((data: Employee[])=>{\n      this.empList = data;\n      this.dataSource = new MatTableDataSource<Employee>(this.empList);\n      console.log(this.empList);\n    })  \n  }\n  \n  deleteEmployee(index: number, e){\n    if(window.confirm('Are you sure')) {\n      const data = this.dataSource.data;\n      data.splice((this.paginator.pageIndex * this.paginator.pageSize) + index, 1);\n      this.dataSource.data = data;\n      this.empService.delete(e.id).subscribe()\n    }\n\n \n  }\n\n}\n","<!--  <div class=\"container\">\n  \n    <a href=\"#\" routerLink=\"/employee/create/\" class=\"btn btn-success\">Add New Employee</a>\n    \n    <table class=\"table table-bordered\">\n      <tr>\n        <th>ID</th>\n        <th>FirstName</th>\n        <th>LastName</th>\n        <th>Email</th>\n        <th width=\"220px\">Action</th>\n      </tr>\n      <tr *ngFor=\"let emp of empList\">\n        <td>{{ emp.id }}</td>\n        <td>{{ emp.first_name }}</td>\n        <td>{{ emp.last_name }}</td>\n        <td>{{ emp.email }}</td>\n        <td>\n          <a href=\"#\" [routerLink]=\"['/employee/', emp.id, 'edit']\" class=\"btn btn-primary\">Edit</a>\n          <button type=\"button\" (click)=\"deletePost(emp.id)\" class=\"btn btn-danger\">Delete</button>\n        </td>\n      </tr>\n    </table>\n </div> \n -->\n\n\n <!-- <mat-table #table [dataSource]=\"empList\" matSort>\n    <ng-container matColumnDef=\"{{column.id}}\" *ngFor=\"let column of columnNames\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> {{column.value}}</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element[column.id]}}</mat-cell>\n    </ng-container>\n  \n    <mat-header-row *matHeaderRowDef=\"columnNames\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: columnNames;\"></mat-row>\n  </mat-table>  -->\n\n  <!--<div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"empList\">\n\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef>ID</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n      </ng-container>\n\n\n      <ng-container matColumnDef=\"first_name\">\n        <th mat-header-cell *matHeaderCellDef>FIRST NAME</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.first_name}}</td>\n      </ng-container>\n\n\n      <ng-container matColumnDef=\"last_name\">\n        <th mat-header-cell *matHeaderCellDef>LAST NAME</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.last_name}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"email\">\n        <th mat-header-cell *matHeaderCellDef>EMAIL</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.email}}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n</div> -->\n\n<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-->\n<!-- Title group  -->\n<div class=\"title-group\">\n    <h1 class=\"mat-h1\">Employees List</h1>\n    <mat-divider fxFlex=\"1 0\"></mat-divider>\n  </div>\n  \n  <p *ngIf=\"empList.length <= 0\" class=\"no-data\">There is no employees added yet!</p>\n  \n  <div class=\"container\" *ngIf=\"empList.length > 0\">\n    <div class=\"mat-elevation-z8\">\n      <table mat-table [dataSource]=\"dataSource\">\n        <ng-container matColumnDef=\"id\">\n          <th mat-header-cell *matHeaderCellDef>  ID </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"first_name\">\n          <th mat-header-cell *matHeaderCellDef> First Name </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.first_name}} </td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"last_name\">\n          <th mat-header-cell *matHeaderCellDef> Last Name </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.last_name}} </td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"email\">\n          <th mat-header-cell *matHeaderCellDef> Email </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\n        </ng-container>\n  \n        <ng-container matColumnDef=\"action\">\n          <th mat-header-cell *matHeaderCellDef> Action </th>\n          <td mat-cell *matCellDef=\"let element; let i = index;\">\n            <button mat-raised-button color=\"primary\" class=\"push-right\"\n              [routerLink]=\"['/edit-employee/', element.id]\">Edit</button>\n            <button mat-raised-button color=\"accent\" (click)=\"deleteEmployee(i, element)\">Delete</button>\n          </td>\n        </ng-container>\n  \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n  \n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n    </div>\n  </div>\n    ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}